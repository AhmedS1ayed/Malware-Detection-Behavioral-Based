import psutil

def killProcessIdByName(processName):
    '''
    Get a list of all the PIDs of a all the running process whose name contains
    the given string processName
    '''
    #Iterate over the all the running process
    for proc in psutil.process_iter():
       try:
           pinfo = proc.as_dict(attrs=['pid', 'name', 'create_time'])
           # Check if process name contains the given name string.
           if processName.lower() in pinfo['name'].lower() :
               proc.kill()
       except (PermissionError , psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess) :
           pass

count =0
while(1):
    for proc in psutil.process_iter():
        try:
            # this returns the list of opened files by the current process
            flist = proc.open_files()
            #if the opened file is .txt kill the process
            if flist:
                for nt in flist:
                    if('.txt' in nt.path):
                        #print path of the file and the process information
                        print("\t",nt.path)
                        print(proc.username)
                        proc.kill()
                        count+=1
                        print('process name' , proc.name)
                        if(count == 2):
                            print("Malicious Behaviour Occured -- changing txt files")
                            '''#put process data in pinfo
                            pinfo = proc.as_dict(attrs=['pid', 'name', 'create_time'])
                            #kill all processes of the same name parent or childs
                            killProcessIdByName(pinfo['name']) '''
        except (PermissionError , psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
            pass